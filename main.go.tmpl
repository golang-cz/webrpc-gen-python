{{- define "main" -}}

{{- /* Options with default values. */ -}}
{{- $opts := dict -}}

{{- if or (eq .Opts.client "") (eq .Opts.client "true") -}}
  {{- $opts = dict "client" true -}}
{{- else -}}
  {{- $opts = dict "client" false -}}
{{- end -}}

{{- if or (eq .Opts.server "") (eq .Opts.server "true") -}}
  {{- $opts = dict "server" true "client" ($opts.client) -}}
{{- else -}}
  {{- $opts = dict "server" false "client" ($opts.client) -}}
{{- end -}}


{{- /* Print help on unsupported option. */ -}}
{{- range $k, $v := .Opts }}
  {{- if not (exists $opts $k) -}}
    {{- stderrPrintf "-%s=%s is not a supported target option\n\nUsage:\n" $k $v -}}
    {{- template "help" $opts -}}
  {{- else -}}

    {{- if not (eq .WebrpcVersion "v1") -}}
      {{- stderrPrintf "%s generator error: unsupported webrpc version %s\n" .WebrpcTarget .WebrpcVersion -}}
    {{- else -}}

      {{- if not (minVersion .WebrpcGenVersion "v0.7.0") -}}
        {{- stderrPrintf "%s generator error: unsupported webrpc-gen version %s, please update\n" .WebrpcTarget .WebrpcGenVersion -}}
      {{- else -}}

        {{- /* Map webrpc data types to Go. */ -}}
        {{- $typeMap := dict -}}
        {{- set $typeMap "null" "nil" -}}
        {{- set $typeMap "any" "interface{}" -}}
        {{- set $typeMap "byte" "byte" -}}
        {{- set $typeMap "bool" "bool" -}}
        {{- set $typeMap "uint" "uint" -}}
        {{- set $typeMap "uint8" "uint8" -}}
        {{- set $typeMap "uint16" "uint16" -}}
        {{- set $typeMap "uint32" "uint32" -}}
        {{- set $typeMap "uint64" "uint64" -}}
        {{- set $typeMap "int" "int" -}}
        {{- set $typeMap "int8" "int8" -}}
        {{- set $typeMap "int16" "int16" -}}
        {{- set $typeMap "int32" "int32" -}}
        {{- set $typeMap "int64" "int64" -}}
        {{- set $typeMap "float32" "float32" -}}
        {{- set $typeMap "float64" "float64" -}}
        {{- set $typeMap "string" "string" -}}
        {{- set $typeMap "timestamp" "string" -}}

// {{.SchemaName}} {{.SchemaVersion}} {{.SchemaHash}}
// --
// Code generated by webrpc-gen@{{.WebrpcGenVersion}} with {{.WebrpcTarget}} generator. DO NOT EDIT.
//
// {{.WebrpcGenCommand}}

// WebRPC description and code-gen version
const WebRPCVersion = "{{.WebrpcVersion}}"

// Schema version of your RIDL schema
const WebRPCSchemaVersion = "{{.SchemaVersion}}"

// Schema hash generated from your RIDL schema
const WebRPCSchemaHash = "{{.SchemaHash}}"

        {{template "types" dict "Messages" .Messages "Services" .Services "TypeMap" $typeMap}}

        {{- if $opts.client}}
          // Client
          {{template "client" dict "Services" .Services "TypeMap" $typeMap}}
          {{template "client_helpers" .}}
        {{- end }}

        {{- if $opts.server}}
          // Server
          {{template "server" dict "Services" .Services "Opts" $opts "TypeMap" $typeMap}}
          {{template "server_helpers" dict "Messages" .Messages "TypeMap" $typeMap}}
        {{- end }}

      {{- end -}} 
    {{- end -}}
  {{- end -}}
{{- end -}}
