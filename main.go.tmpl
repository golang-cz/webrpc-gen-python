{{- define "main" -}}

{{- /* Options with default values. */ -}}
{{- $opts := dict -}}
{{- set $opts "client" (ternary (in .Opts.client "" "true") true false) -}}
{{- set $opts "server" (ternary (in .Opts.server "" "true") true false) -}}

{{- /* Print help on -help. */ -}}
{{- if exists .Opts "help" -}}
  {{- template "help" $opts -}}
  {{- exit(0) -}}
{{- end -}}

{{- /* Print help on unsupported option. */ -}}
{{- range $k, $v := .Opts }}
  {{- if not (exists $opts $k) -}}
    {{- stderrPrintf("-{}={} is not a supported target option\n\nUsage:\n", $k, $v) -}}
    {{- template "help" $opts -}}
    {{- exit(1) -}}
  {{- end -}}
{{- end -}}

{{- if ne .WebrpcVersion "v1" -}}
  {{- stderrPrintf("{} generator error: unsupported webrpc version {}\n", .WebrpcTarget, .WebrpcVersion) -}}
  {{- exit(1) -}}
{{- end -}}

{{- if not (minVersion .WebrpcGenVersion "v0.7.0") -}}
  {{- stderrPrintf("{} generator error: unsupported webrpc-gen version {}, please update\n", .WebrpcTarget, .WebrpcGenVersion) -}}
  {{- exit(1) -}}
{{- end -}}

{{- /* Map webrpc data types to Python. */ -}}
{{- $typeMap := dict }}
{{- set $typeMap "null" "None" -}}
{{- set $typeMap "any" "Any" -}}
{{- set $typeMap "byte" "bytes" -}}
{{- set $typeMap "bool" "bool" -}}
{{- set $typeMap "uint" "int" -}}
{{- set $typeMap "uint8" "int" -}}
{{- set $typeMap "uint16" "int" -}}
{{- set $typeMap "uint32" "int" -}}
{{- set $typeMap "uint64" "int" -}}
{{- set $typeMap "int" "int" -}}
{{- set $typeMap "int8" "int" -}}
{{- set $typeMap "int16" "int" -}}
{{- set $typeMap "int32" "int" -}}
{{- set $typeMap "int64" "int" -}}
{{- set $typeMap "float32" "float" -}}
{{- set $typeMap "float64" "float" -}}
{{- set $typeMap "string" "str" -}}
{{- set $typeMap "timestamp" "str" -}}

# {{.SchemaName}} {{.SchemaVersion}} {{.SchemaHash}}
# --
# Code generated by webrpc-gen@{{.WebrpcGenVersion}} with {{.WebrpcTarget}} generator. DO NOT EDIT.
#
# {{.WebrpcGenCommand}}

# WebRPC description and code-gen version
WebRPCVersion = "{{.WebrpcVersion}}"

# Schema version of your RIDL schema
WebRPCSchemaVersion = "{{.SchemaVersion}}"

# Schema hash generated from your RIDL schema
WebRPCSchemaHash = "{{.SchemaHash}}"

{{template "types" dict "Messages" .Messages "Services" .Services "TypeMap" $typeMap}}

{{- if $opts.client}}
  # Client
  {{template "client" dict "Services" .Services "TypeMap" $typeMap}}
  {{template "client_helpers" .}}
{{- end }}

{{- if $opts.server}}
  # Server
  {{template "server" dict "Services" .Services "Opts" $opts "TypeMap" $typeMap}}
  {{template "server_helpers" dict "Messages" .Messages "TypeMap" $typeMap}}
{{- end }}

{{- end }}